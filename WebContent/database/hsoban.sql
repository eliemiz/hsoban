-- 계정 테이블
CREATE TABLE ACCOUNT (
	ACCOUNT_ID NUMBER,
	NAME VARCHAR2(100),
	ID VARCHAR2(100),
	PASS VARCHAR2(100),
	BIRTHDAY DATE,
	GENDER CHAR(3),
	POST NUMBER,
	ADDRESS VARCHAR2(300),
	ADDRESS2 VARCHAR2(300),
	EMAIL VARCHAR2(100),
	PHONE CHAR(13),
	PHONE2 VARCHAR2(20),
	MAIL_RECV CHAR(1) CONSTRAINT MAIL_RECV_CK CHECK (MAIL_RECV IN ('0', '1')),
	SMS_RECV CHAR(1) CONSTRAINT SMS_RECV_CK CHECK (SMS_RECV IN ('0', '1')),
	CONSTRAINT ACCOUNT_PK PRIMARY KEY (ACCOUNT_ID)
);

-- 210215: ACCOUNT 권한 추가, 권한 테이블, 권한 추가
ALTER TABLE ACCOUNT ADD AUTH VARCHAR2(30);
ALTER TABLE ACCOUNT ADD CONSTRAINT ACCOUNT_AUTH_FK FOREIGN KEY(AUTH)
	REFERENCES AUTH(AUTH);

CREATE TABLE AUTH (
	AUTH VARCHAR2(30) PRIMARY KEY
);
INSERT INTO AUTH VALUES ('MANAGER');
INSERT INTO AUTH VALUES ('NORMAL');

-- 210215: ACCOUNT_ID 생성 시퀀스 추가
CREATE SEQUENCE ACCOUNT_ID_SEQ
	START WITH 100000
	INCREMENT BY 1
	MINVALUE 100000
	MAXVALUE 999999
	CYCLE;
 
-- 상품 테이블
CREATE TABLE PRODUCT (
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	NAME VARCHAR2(100),
	PRODUCT_SIZE VARCHAR2(50),
	PRICE NUMBER,
	DESCRIPTION VARCHAR2(1000),
	CONSTRAINT PRODUCT_PK PRIMARY KEY (PRODUCT_ID, COLOR)
);

-- 210215_2 : CATEGORY 컬럼 추가
ALTER TABLE PRODUCT ADD CATEGORY VARCHAR2(50); 

-- 210215: PRODUCT_ID 생성 시퀀스 추가
CREATE SEQUENCE PRODUCT_ID_SEQ
	START WITH 100000
	INCREMENT BY 1
	MINVALUE 100000
	MAXVALUE 999999
	CYCLE;

-- 재고 테이블
CREATE TABLE STOCK (
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	STOCK NUMBER,
	CONSTRAINT STOCK_PK PRIMARY KEY (PRODUCT_ID, COLOR)
);

-- 장바구니 테이블
CREATE TABLE CART (
	ACCOUNT_ID NUMBER,
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	COUNT NUMBER,
	CONSTRAINT CART_PK PRIMARY KEY (ACCOUNT_ID, PRODUCT_ID, COLOR)
);

-- 주문 테이블
CREATE TABLE ORDERED (
	ORDER_ID NUMBER,
	ACCOUNT_ID NUMBER,
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	ORDER_COUNT NUMBER,
	ORDER_DATE DATE,
	POST NUMBER,
	ADDRESS VARCHAR2(300),
	ADDRESS2 VARCHAR2(300),
	ORDER_MESSAGE VARCHAR2(300),
	PAY VARCHAR2(50),
	TOTAL NUMBER,
	CONSTRAINT ORDERED_PK PRIMARY KEY (ORDER_ID)
);

-- 210215: ORDER_ID 생성 시퀀스 추가
CREATE SEQUENCE ORDER_ID_SEQ
	START WITH 1
	INCREMENT BY 1;

-- 관심상품 테이블
CREATE TABLE WISH_LIST (
	ACCOUNT_ID NUMBER,
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	CONSTRAINT WISH_LIST_PK PRIMARY KEY (ACCOUNT_ID, PRODUCT_ID, COLOR)
);

-- 후기 테이블
CREATE TABLE REVIEW (
	REVIEW_ID NUMBER,
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	TITLE VARCHAR2(300),
	CONTENT VARCHAR2(4000),
	ACCOUNT_ID NUMBER,
	POSTING_DATE DATE,
	VIEWS NUMBER,
	CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_ID)
);


-- 문의 테이블
CREATE TABLE QNA (
	QNA_ID NUMBER,
	PRODUCT_ID NUMBER,
	COLOR VARCHAR2(50),
	TITLE VARCHAR2(300),
	CONTENT VARCHAR2(4000),
	ACCOUNT_ID NUMBER,
	POSTING_DATE DATE,
	VIEWS NUMBER,
	CONSTRAINT QNA_PK PRIMARY KEY (QNA_ID)
);

-- 공지 테이블
CREATE TABLE NOTICE (
	NOTICE_ID NUMBER,
	TITLE VARCHAR2(300),
	CONTENT VARCHAR2(4000),
	ACCOUNT_ID NUMBER,
	POSTING_DATE DATE,
	VIEWS NUMBER,
	CONSTRAINT NOTICE_PK PRIMARY KEY (NOTICE_ID)
);


-- 210215: REVIEW_ID, QNA_ID, NOTICE_ID 생성 시퀀스 추가
CREATE SEQUENCE REVIEW_ID_SEQ
	START WITH 1
	INCREMENT BY 1;
CREATE SEQUENCE QNA_ID_SEQ
	START WITH 1
	INCREMENT BY 1;
CREATE SEQUENCE NOTICE_ID_SEQ
	START WITH 1
	INCREMENT BY 1;

-- 탈퇴회원 테이블
CREATE TABLE WITHDRAW_ACCOUNT (
	ACCOUNT_ID NUMBER,
	REASON VARCHAR2(4000),
	WITHDRAW_DATE DATE,
	CONSTRAINT WITHDRAW_ACCOUNT_PK PRIMARY KEY (ACCOUNT_ID)
);

SELECT * FROM stock;
INSERT INTO stock VALUES (101010, 'blue', 10);
INSERT INTO stock VALUES (101011, 'red', 20);
INSERT INTO stock VALUES (101012, 'black', 30);
INSERT INTO stock VALUES (101012, 'BLACK', 40);
INSERT INTO stock VALUES (101012, 'GREEN', 50);
INSERT INTO stock VALUES (101013, 'yelloW',60);

SELECT * FROM USER_TABLES;

SELECT * FROM cart WHERE product_id IN (SELECT product_id, color FROM product);

SELECT * FROM WISH_LIST wl WHERE (product_id,color) IN (SELECT product_id, color FROM product);
SELECT * FROM cart wl WHERE (product_id,color) IN (SELECT product_id, color FROM product);

SELECT * FROM dCREATE TABLE COMMENTS (
COMMENT_ID NUMBER,
REVIEW_ID NUMBER,
ID VARCHAR2(200),
PASS VARCHAR2(200),
CONTENT VARCHAR2(4000),
CONSTRAINT COMMENT_ID_PK PRIMARY KEY (COMMENT_ID)
);
SELECT * FROM comments;

DELETE FROM comments;

SELECT * FROM account;